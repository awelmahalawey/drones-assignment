openapi: 3.0.1

info:
  title: Drones Backend API
  description: Drones Backend API
  contact:
    name: Drones Backend Team
    email: ahmed.elmahalawey@gmail.com
  version: 4.1.0

servers:
  - url: http://localhost:8080/api/v1
    description: Local server

paths:
  /mock/test:
    get:
      tags:
        - Mock Test Functionality
      summary: Mock Test Functionality. (To Be Removed)
      description: Mock Test Functionality. (To Be Removed)
      operationId: mockTestApi
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseInfoResource'
        400:
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
        500:
          description: Unexpected internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'

  /medication:
    get:
      tags:
        - Medication Functionality
      summary: Fetch Medications Functionality.
      description: Api to fetch all medications with optional filters.
      operationId: fetchAllMedications
      parameters:
        - $ref: '#/components/parameters/PageNumberParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/searchTextParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicationResource'
        400:
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
        500:
          description: Unexpected internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
    post:
      tags:
        - Medication Functionality
      summary: Create new Medication Functionality.
      description: Api to create new medication.
      operationId: addMedication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationDataTransferResource'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResource'
        400:
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
        500:
          description: Unexpected internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'

  /medication/{medicationId}:
    get:
      tags:
        - Medication Functionality
      summary: Fetch Medication details by Id Functionality.
      description: Api to fetch medication details by Id.
      operationId: getMedicationDetails
      parameters:
        - name: medicationId
          in: path
          description: Medication Id
          required: true
          allowEmptyValue: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResource'
        400:
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
        500:
          description: Unexpected internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
    put:
      tags:
        - Medication Functionality
      summary: Update existing Medication Functionality.
      description: Api to update existing medication.
      operationId: updateMedication
      parameters:
        - name: medicationId
          in: path
          description: Medication Id
          required: true
          allowEmptyValue: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationDataTransferResource'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResource'
        400:
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
        500:
          description: Unexpected internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
    delete:
      tags:
        - Medication Functionality
      summary: Delete existing Medication Functionality.
      description: Api to delete existing medication.
      operationId: deleteMedication
      parameters:
        - name: medicationId
          in: path
          description: Medication Id
          required: true
          allowEmptyValue: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseInfoResource'
        400:
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
        500:
          description: Unexpected internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResource'

components:
  schemas:
    MedicationDataTransferResource:
      type: object
      properties:
        name:
          type: string
          description: Medication name
        code:
          type: string
          description: Medication code
        weight:
          type: number
          format: double
          description: Medication weight
        imageUrl:
          type: string
          description: Medication Image URL
      required:
        - name
        - code
        - weight

    MedicationResource:
      type: object
      properties:
        id:
          type: string
          description: Medication Id
        name:
          type: string
          description: Medication name
        code:
          type: string
          description: Medication code
        weight:
          type: number
          format: double
          description: Medication weight
        imageUrl:
          type: string
          description: Medication Image URL

    DroneDataTransferResource:
      type: object
      properties:
        serialNumber:
          type: string
          description: Drone Serial Number
        model:
          type: string
          $ref: '#/components/schemas/DroneModelEnum'
        state:
          type: string
          $ref: '#/components/schemas/DroneStateEnum'
        weightLimit:
          type: integer
          description: Drone weight Limit weight
        batteryCap:
          type: number
          format: double
          description: Drone battery capacity
      required:
        - serialNumber
        - model
        - state
        - weightLimit
        - batteryCap

    DronePayloadDataTransferResource:
      type: object
      properties:
        payloadType:
          type: string
          $ref: '#/components/schemas/PayloadTypeEnum'
        payloadIdentifier:
          type: string
          description: Payload identifier
        state:
          type: string
          $ref: '#/components/schemas/PayloadStateEnum'
        droneId:
          type: string
          description: Drone identifier that is holding the payload
      required:
        - payloadType
        - payloadIdentifier
        - state

    BaseInfoResource:
      type: object
      properties:
        message:
          type: string
          description: A brief description of the response

    ApiErrorResource:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
          description: timestamp of the error
        errorName:
          type: string
          description: Error name
        errorMessage:
          type: string
          description: Detailed error message
        errorCode:
          type: string
          description: Error Code, if any


    # Enums
    PayloadStateEnum:
      type: string
      enum:
        - READY_FOR_DELIVERY
        - IN_DELIVERY
        - DELIVERED

    PayloadTypeEnum:
      type: string
      enum:
        - MEDICATION

    DroneStateEnum:
      type: string
      enum:
        - IDLE
        - LOADING
        - LOADED
        - DELIVERING
        - DELIVERED
        - RETURNING

    DroneModelEnum:
      type: string
      enum:
        - LIGHT_WEIGHT
        - MIDDLE_WEIGHT
        - CRUISER_WEIGHT
        - HEAVY_WEIGHT

  parameters:
    PageNumberParam:
      name: page
      in: query
      description: The page to return.
      schema:
        type: integer
    PageSizeParam:
      name: size
      in: query
      description: The size of the page.
      schema:
        type: integer
    searchTextParam:
      name: searchText
      in: query
      description: search text to filter institutes
      required: false
      allowEmptyValue: true
      schema:
        type: string
    AcceptLanguageParam:
      name: accept-language
      in: header
      description: Accept language value
      examples:
        English:
          value: "en"
        Arabic:
          value: "ar"
      schema:
        type: string
        default: "en"